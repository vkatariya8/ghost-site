{
  "name": "posthtml",
  "version": "0.8.7",
  "description": "HTML/XML processor",
  "keywords": [
    "html",
    "xml",
    "postproccessor",
    "parser",
    "transform",
    "transformations",
    "manipulation",
    "preprocessor",
    "processor"
  ],
  "main": "lib/posthtml.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "dependencies": {
    "posthtml-parser": "^0.1.3",
    "posthtml-render": "^1.0.5"
  },
  "devDependencies": {
    "chai": "^3.0.0",
    "chai-as-promised": "^5.1.0",
    "chai-subset": "^1.1.0",
    "conventional-changelog-cli": "^1.0.0",
    "es6-promise": "^3.0.2",
    "istanbul": "^0.4.2",
    "jscs": "^2.1.1",
    "jshint": "^2.8.0",
    "mocha": "^2.2.5",
    "mversion": "^1.10.0",
    "object.assign": "^4.0.3",
    "vow": "^0.4.12"
  },
  "scripts": {
    "test": "npm run lint && mocha -R dot && npm run coverage",
    "clean": "rm -rf coverage",
    "coverage": "istanbul cover --report text --report html --report lcov node_modules/mocha/bin/_mocha -- -R tap",
    "lint": "jshint . && jscs -v .",
    "release-patch": "mversion patch",
    "release-minor": "mversion minor",
    "release-major": "mversion major"
  },
  "author": {
    "name": "Anton Winogradov",
    "email": "winogradovaa@gmail.com"
  },
  "contributors": [
    {
      "name": "Ivan Voischev",
      "email": "voischev.ivan@ya.ru"
    },
    {
      "name": "Anton Winogradov",
      "email": "winogradovaa@gmail.com"
    },
    {
      "name": "Alexej Yaroshevich",
      "email": "zxqfox@gmail.com"
    }
  ],
  "homepage": "https://github.com/posthtml/posthtml",
  "repository": {
    "type": "git",
    "url": "git://github.com/posthtml/posthtml.git"
  },
  "bugs": {
    "url": "https://github.com/posthtml/posthtml/issues"
  },
  "license": "MIT",
  "readme": "[![npm][npm]][npm-1]\n[![Build][build]][build-1]\n[![Coverage][cover]][cover-1]\n[![Chat][chat]][chat-1]\n\n# PostHTML <img align=\"right\" width=\"220\" height=\"200\" title=\"PostHTML logo\" src=\"http://posthtml.github.io/posthtml/logo.svg\">\n\nPostHTML is a tool for transforming HTML/XML with JS plugins. PostHTML itself is very small. It includes only a HTML parser, a HTML node tree API and a node tree stringifier.\n\nAll HTML transformations are made by plugins. And these plugins are just small plain JS functions, which receive a HTML node tree, transform it, and return a modified tree.\n\nFor more detailed information about PostHTML in general take a look at the [docs][docs].\n\n## Dependencies\n- [posthtml-parser][parser] — Parser HTML/XML to PostHTMLTree\n- [posthtml-render][render] — Render PostHTMLTree to HTML/XML\n\n## Usage\n\n```\nnpm i -D posthtml\n```\n<img align=\"right\" width=\"91\" height=\"80\" title=\"NodeJS\" src=\"https://worldvectorlogo.com/logos/nodejs-icon.svg\">\n### API\n\n**Simple example**\n\n```js\nconst posthtml = require('posthtml');\n\nlet html = `\n    <myComponent>\n      <myTitle>Super Title</myTitle>\n      <myText>Awesome Text</myText>\n    </myComponent>`;\n\nposthtml()\n    .use(require('posthtml-custom-elements')())\n    .process(html/*, options */)\n    .then(function(result) {\n        console.log(result.html);\n        // <div class=\"myComponent\">\n        //  <div class=\"myTitle\">Super Title</div>\n        //  <div class=\"myText\">Awesome Text</div>\n        // </div>\n    });\n```\n\n**Сomplex example**\n\n```js\nconst posthtml = require('posthtml');\n\nlet html = '<html><body><p class=\"wow\">OMG</p></body></html>';\n\nposthtml([\n        require('posthtml-to-svg-tags')(),\n        require('posthtml-extend-attrs')({\n            attrsTree: {\n                '.wow' : {\n                    id: 'wow_id',\n                    fill: '#4A83B4',\n                    'fill-rule': 'evenodd',\n                    'font-family': 'Verdana'\n                }\n            }\n        })\n    ])\n    .process(html/*, options */)\n    .then(function(result) {\n        console.log(result.html);\n        // <svg xmlns=\"http://www.w3.org/2000/svg\">\n        //  <text\n        //    class=\"wow\"\n        //    id=\"wow_id\" fill=\"#4A83B4\"\n        //    fill-rule=\"evenodd\" font-family=\"Verdana\">\n        //     OMG\n        //  </text>\n        // </svg>\n    });\n```\n\n<img align=\"right\"  width=\"100\" height=\"90\" title=\"npm\" src=\"https://worldvectorlogo.com/logos/npm.svg\" />\n## CLI\n\n### Install [posthtml-cli](https://github.com/GitScrum/posthtml-cli)\n\n```bash\nnpm i posthtml-cli\n```\n\n```bash\nposthtml -o output.html -i input.html -c config.json\n```\nor\n\n```json\n\"scripts\": {\n  \"html\": \"echo '=> Building HTML' && posthtml -o output.html -i input.html -c config.json\"\n}\n```\n\n```bash\nnpm run html\n```\n<img align=\"right\" width=\"80\" height=\"80\" title=\"GulpJS\" src=\"https://worldvectorlogo.com/logos/gulp.svg\" />\n## Gulp\n\n### Install [gulp-posthtml](https://www.npmjs.com/package/gulp-posthtml)\n\n```bash\nnpm i -D gulp-posthtml\n```\n\n```js\ngulp.task('html', function() {\n    let posthtml = require('gulp-posthtml');\n    return gulp.src('src/**/*.html')\n        .pipe(posthtml([ require('posthtml-custom-elements')() ]/*, options */))\n        .pipe(gulp.dest('build/'));\n});\n```\n\nCheck [project-stub](https://github.com/posthtml/project-stub) example with Gulp\n\n<img align=\"right\" width=\"90\" height=\"80\" title=\"GruntJS\" src=\"https://worldvectorlogo.com/logos/grunt.svg\" />\n## Grunt\n\n### Install [grunt-posthtml](https://www.npmjs.com/package/grunt-posthtml)\n\n```bash\nnpm i -D grunt-posthtml\n```\n\n```js\nposthtml: {\n    options: {\n        use: [\n            require('posthtml-head-elements')({\n                headElements: 'test/config/head.json'\n            }),\n            require('posthtml-doctype')({\n                doctype: 'HTML 5'\n            }),\n            require('posthtml-include')({\n                encoding: 'utf-8'\n            })\n        ]\n    },\n    build: {\n        files: [{\n            expand: true,\n            dot: true,\n            cwd: 'test/html/',\n            src: ['*.html'],\n            dest: 'test/tmp/'\n        }]\n    }\n}\n```\n<img align=\"right\" width=\"90\" height=\"90\" title=\"Webpack\" src=\"https://worldvectorlogo.com/logos/webpack.svg\" />\n## Webpack\n\n### Install [posthtml-loader](https://www.npmjs.com/package/posthtml-loader)\n\n```bash\nnpm i -D posthtml-loader\n```\n```js\n\nconst bem = require('posthtml-bem')()\nconst each = require('posthtml-each')()\n\nmodule.exports = {\n  module: {\n    loaders: [\n      {\n        test: /\\.html$/,\n        loader: 'html!posthtml'\n      }\n    ]\n  }\n  posthtml: function () {\n    return {\n      defaults: [ bem, each ]\n    }\n  }\n}\n```\nwith custom package\n\n```js\nconst bem = require('posthtml-bem')()\nconst each = require('posthtml-each')()\nconst include = require('posthtml-include')()\n\nmodule.exports = {\n  module: {\n    loaders: [\n      {\n        test: /\\.html$/,\n        loader: 'html!posthtml?pack=html'\n      }\n    ]\n  }\n  posthtml: function () {\n    return {\n      defaults: [ bem, each ],\n      html: [ bem, each, include ]\n    }\n  }\n}\n```\n## PostHTML with Jade engine in Express\nAlso it's work with other view engine. Callback in `app.engine` is called by `res.render()` to render the template code.\n\n```js\napp.engine('jade', function (path, options, callback) {\n    // PostHTML plugins\n    let plugins = [\n        require('posthtml-bem')(),\n        require('posthtml-textr')({ locale: 'ru'}, [\n            require('typographic-ellipses'),\n            require('typographic-single-spaces'),\n            require('typographic-quotes')\n        ])\n    ];\n\n    let html = require('jade').renderFile(path, options);\n\n    posthtml(plugins)\n        .process(html)\n        .then(function (result) {\n            if (typeof callback === 'function') {\n                var res;\n                try {\n                    res = result.html;\n                } catch (ex) {\n                    return callback(ex);\n                }\n                return callback(null, res);\n            }\n        });\n})\napp.set('view engine', 'jade');\n```\n\n## Middleware\n\n<img align=\"right\" width=\"120\" height=\"60\" title=\"KoaJS\" src=\"http://t2.gstatic.com/images?q=tbn:ANd9GcRfnGHcTYGyMNcicU4N3nzV-5Rta9s_e5LzSI2HBjKMsLHundtmqAlQ\" />\n### [Koa](http://koajs.com/)\n\n##### [koa-posthtml](https://github.com/michael-ciniawsky/koa-posthtml)\n\n<img align=\"right\" width=\"120\" height=\"75\" title=\"HapiJS\" src=\"https://worldvectorlogo.com/logos/hapi.svg\" />\n### [Hapi](https://hapijs.com)\n\n##### [hapi-posthtml](https://github.com/michael-ciniawsky/hapi-posthtml)\n\n<img align=\"right\" width=\"125\" height=\"50\" title=\"ExpressJS\" src=\"https://worldvectorlogo.com/logos/express-109.svg\" />\n### [Express](https://expressjs.com)\n\n##### [express-posthtml](https://github.com/michael-ciniawsky/express-posthtml)\n\n<img align=\"right\" width=\"200\" height=\"75\" title=\"ElectronJS\" src=\"https://worldvectorlogo.com/logos/electron-4.svg\" />\n### [Electron](https://electron.atom.io)\n\n##### [electron-posthtml](https://github.com/michael-ciniawsky/electron-posthtml)\n\n## Plugins\nTake a look at the searchable [Plugins Catalog](http://maltsev.github.io/posthtml-plugins/) for PostHTML plugins.\n\n|Plugin|Status&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|Description|\n|:-----|:-----|:----------|\n|[posthtml-bem][bem]| [![npm][bem-1]][bem-2] |Support BEM naming in html structure|\n|[posthtml-postcss][css]|[![npm][css-1]][css-2]|Use [PostCSS][css-3] in HTML document|\n|[posthtml-retext][text]|[![npm][text-1]][text-2]|Extensible system for analysing and manipulating natural language|\n|[posthtml-custom-elements][elem]|[![npm][elem-1]][elem-2]| Use custom elements now |\n|[posthtml-web-component][web]|[![npm][web-1]][web-2]|Web Component ServerSide Rending, Component as Service in Server|\n|[posthtml-inline-css][in]|[![npm][in-1]][in-2]|CSS Inliner|\n|[posthtml-style-to-file][style]|[![npm][style-1]][style-2]| Save HTML style nodes and attributes to CSS file|\n|[posthtml-px2rem][px2rem]|[![npm][px2rem-1]][px2rem-2]|Change px to rem in HTML inline CSS|\n|[posthtml-classes][classes]|[![npm][classes-1]][classes-2]|Get a list of classes from HTML|\n|[posthtml-doctype][doctype]|[![npm][doctype-1]][doctype-2]|Extend html tags doctype|\n|[posthtml-include][include]|[![npm][include-1]][include-2]|Include html file|\n|[posthtml-to-svg-tags][svg]|[![npm][svg-1]][svg-2]|Convert html tags to svg equals|\n|[posthtml-extend-attrs][attrs]|[![npm][attrs-1]][attrs-2]| Extend html tags attributes with custom data and attributes|\n|[posthtml-modular-css][modular]|[![npm][modular-1]][modular-1]|Makes css modular|\n|[posthtml-static-react][react]|[![npm][react-1]][react-2]| Render custom elements as static React components |\n|[posthtml-head-elements][head]|[![npm][head-1]][head-2]|Store head elements (title, script, link, base and meta) in a JSON file and render them into the document during the build process|\n|[posthtml-prefix-class][prefix]|[![npm][prefix-1]][prefix-2]|Prefix class names\n|[posthtml-collect-inline-styles][collect]|[![npm][collect-1]][collect-2]|Collect inline styles and insert to head tag|\n|[posthtml-transformer][transform]|[![npm][transform-1]][transform-2]|process HTML by directives in node attrs, such as inline scripts and styles, remove useless tags, concat scripts and styles etc.|\n|[posthtml-inline-assets][assets]|[![npm][assets-1]][assets-2]|Inline external scripts, styles, and images in HTML|\n|[posthtml-schemas][schemas]|[![npm][schemas-1]][schemas-2]|Add schema.org microdata to your markup super easy|\n|[posthtml-extend][extend] |[![npm][extend-1]][extend-2]|Templates extending (Jade-like) |\n|[posthtml-img-autosize][img]|[![npm][img-1]][img-2]|Auto setting the width and height of \\<img\\>|\n|[posthtml-aria-tabs][aria]|[![npm][aria-1]][aria-2]|Write accessible tabs with minimal markup|\n|[posthtml-lorem][lorem]|[![npm][lorem-1]][lorem-2]|Add lorem ipsum placeholder text to any document|\n|[posthtml-md][md]|[![npm][md-1]][md-2]|Easily use context-sensitive markdown within HTML|\n|[posthtml-alt-always][alt]|[![npm][alt-1]][alt-2]|Always add alt attribute for images that don't have it (accessibility reasons)|\n|[posthtml-css-modules][modules]|[![npm][modules-1]][modules-2]|Use CSS modules in HTML|\n|[posthtml-jade][jade]|[![npm][jade-1]][jade-2]|Jade templates/syntax support|\n|[posthtml-exp][exp]|[![npm][exp-1]][exp-2]|Add template expressions to your HTML|\n|[posthtml-tidy][tidy]|[![npm][tidy-1]][tidy-2]|Sanitize HTML with HTML Tidy on the fly|\n|[posthtml-hint][hint]|[![npm][hint-1]][hint-2]|Lint HTML with HTML Hint|\n|[posthtml-w3c][w3c]|[![npm][w3c-1]][w3c-2]|Validate HTML with W3C Validation|\n|[posthtml-load-plugins][load]|[![npm][load-1]][load-2]|Auto-load Plugins for PostHTML|\n|[posthtml-remove-attributes][remove]|[![npm][remove-1]][remove-2]|Remove attributes unconditionally or with content match|\n\n## License\nMIT\n\n[npm]: https://badge.fury.io/js/posthtml.svg\n[npm-1]: http://badge.fury.io/js/posthtml\n\n[chat]: https://badges.gitter.im/posthtml/posthtml.svg\n[chat-1]: https://gitter.im/posthtml/posthtml?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"\n\n[build]: https://travis-ci.org/posthtml/posthtml.svg?branch=master\n[build-1]: https://travis-ci.org/posthtml/posthtml?branch=master\n\n[cover]: https://coveralls.io/repos/posthtml/posthtml/badge.svg?branch=master\n[cover-1]: https://coveralls.io/r/posthtml/posthtml?branch=master\n\n[parser]: https://github.com/posthtml/posthtml-parser\n[render]: https://github.com/posthtml/posthtml-render\n\n[docs]: https://github.com/posthtml/posthtml/blob/master/docs\n\n[bem]: https://github.com/rajdee/posthtml-bem\n[bem-1]: https://badge.fury.io/js/posthtml-bem.svg\n[bem-2]: https://badge.fury.io/js/posthtml-bem\n\n[css]: https://github.com/posthtml/posthtml-postcss\n[css-1]: https://badge.fury.io/js/posthtml-postcss.svg\n[css-2]: https://badge.fury.io/js/posthtml-postcss\n[css-3]: https://github.com/postcss/postcss\n\n[text]: https://github.com/voischev/posthtml-retext\n[text-1]: https://badge.fury.io/js/posthtml-retext.svg\n[text-2]: https://badge.fury.io/js/posthtml-retext\n\n[elem]: https://github.com/posthtml/posthtml-custom-elements\n[elem-1]: https://badge.fury.io/js/posthtml-custom-elements.svg\n[elem-2]: https://badge.fury.io/js/posthtml-custom-elements\n\n[web]: https://github.com/island205/posthtml-web-component\n[web-1]: https://badge.fury.io/js/posthtml-web-component.svg\n[web-2]: https://badge.fury.io/js/posthtml-web-components\n\n[in]: https://github.com/maltsev/posthtml-inline-css\n[in-1]: https://badge.fury.io/js/posthtml-inline-css.svg\n[in-2]: https://badge.fury.io/js/posthtml-inline-css\n\n[style]: https://github.com/posthtml/posthtml-style-to-file\n[style-1]: https://badge.fury.io/js/posthtml-style-to-file.svg\n[style-2]: https://badge.fury.io/js/posthtml-style-to-file\n\n[px2rem]: https://github.com/weixin/posthtml-px2rem\n[px2rem-1]: https://badge.fury.io/js/posthtml-px2rem.svg\n[px2rem-2]: https://badge.fury.io/js/posthtml-px2rem\n\n[classes]: https://github.com/rajdee/posthtml-classes\n[classes-1]: https://badge.fury.io/js/posthtml-classes.svg\n[classes-2]: https://badge.fury.io/js/posthtml-classes\n\n[doctype]: https://github.com/posthtml/posthtml-doctype\n[doctype-1]: https://badge.fury.io/js/posthtml-doctype.svg\n[doctype-2]: https://badge.fury.io/js/posthtml-doctype\n\n[include]: https://github.com/posthtml/posthtml-include\n[include-1]: https://badge.fury.io/js/posthtml-include.svg\n[include-2]: https://badge.fury.io/js/posthtml-include\n\n[svg]: https://github.com/theprotein/posthtml-to-svg-tags\n[svg-1]: https://badge.fury.io/js/posthtml-to-svg-tags.svg\n[svg-2]: https://badge.fury.io/js/posthtml-to-svg-tags\n\n[attrs]: https://github.com/theprotein/posthtml-extend-attrs\n[attrs-1]: https://badge.fury.io/js/posthtml-extend-attrs.svg\n[attrs-2]: https://badge.fury.io/js/posthtml-extend-attrs\n\n[modular]: https://github.com/admdh/posthtml-modular-css\n[modular-1]: https://badge.fury.io/js/posthtml-modular-css.svg\n[modular-2]: https://badge.fury.io/js/posthtml-modular-css\n\n[react]: https://github.com/rasmusfl0e/posthtml-static-react\n[react-1]: https://badge.fury.io/js/posthtml-static-react.svg\n[react-2]: https://badge.fury.io/js/posthtml-static-react\n\n[head]: https://github.com/TCotton/posthtml-head-elements\n[head-1]: https://badge.fury.io/js/posthtml-head-elements.svg\n[head-2]: https://badge.fury.io/js/posthtml-head-elements\n\n[prefix]: https://github.com/stevenbenisek/posthtml-prefix-class\n[prefix-1]: https://badge.fury.io/js/posthtml-prefix-class.svg\n[prefix-2]: https://badge.fury.io/js/posthtml-prefix-class\n\n[collect]: https://github.com/totora0155/posthtml-collect-inline-styles\n[collect-1]: https://badge.fury.io/js/posthtml-collect-inline-styles.svg\n[collect-2]: https://badge.fury.io/js/posthtml-collect-inline-styles\n\n[transform]: https://github.com/flashlizi/posthtml-transformer\n[transform-1]: https://badge.fury.io/js/posthtml-transformer.svg\n[transform-2]: https://badge.fury.io/js/posthtml-transformer\n\n[assets]: https://github.com/jonathantneal/posthtml-inline-assets\n[assets-1]: https://badge.fury.io/js/posthtml-inline-assets.svg\n[assets-2]: https://badge.fury.io/js/posthtml-inline-assets\n\n[schemas]: https://github.com/jonathantneal/posthtml-schemas\n[schemas-1]: https://badge.fury.io/js/posthtml-schemas.svg\n[schemas-2]: https://badge.fury.io/js/posthtml-schemas\n\n[extend]: https://github.com/maltsev/posthtml-extend\n[extend-1]: https://badge.fury.io/js/posthtml-extend.svg\n[extend-2]: https://badge.fury.io/js/posthtml-extend\n\n[img]: https://github.com/maltsev/posthtml-img-autosize\n[img-1]: https://badge.fury.io/js/posthtml-img-autosize.svg\n[img-2]: https://badge.fury.io/js/posthtml-img-autosize\n\n[aria]: https://github.com/jonathantneal/posthtml-aria-tabs\n[aria-1]: https://badge.fury.io/js/posthtml-aria-tabs.svg\n[aria-2]: https://badge.fury.io/js/posthtml-aria-tabs\n\n[lorem]: https://github.com/jonathantneal/posthtml-lorem\n[lorem-1]: https://badge.fury.io/js/posthtml-lorem.svg\n[lorem-2]: https://badge.fury.io/js/posthtml-lorem\n\n[md]: https://github.com/jonathantneal/posthtml-md\n[md-1]: https://badge.fury.io/js/posthtml-md.svg\n[md-2]: https://badge.fury.io/js/posthtml-md\n\n[alt]: https://github.com/ismamz/posthtml-alt-always\n[alt-1]: https://badge.fury.io/js/posthtml-alt-always.svg\n[alt-2]: https://badge.fury.io/js/posthtml-alt-always\n\n[modules]: https://github.com/maltsev/posthtml-css-modules\n[modules-1]: https://badge.fury.io/js/posthtml-css-modules.svg\n[modules-2]: https://badge.fury.io/js/posthtml-css-modules\n\n[jade]: https://github.com/michael-ciniawsky/posthtml-jade\n[jade-1]: https://badge.fury.io/js/posthtml-jade.svg\n[jade-2]: https://badge.fury.io/js/posthtml-jade\n\n[tidy]: https://github.com/michael-ciniawsky/posthtml-tidy\n[tidy-1]: https://badge.fury.io/js/posthtml-tidy.svg\n[tidy-2]: https://badge.fury.io/js/posthtml-tidy\n\n[hint]: https://github.com//michael-ciniawsky/posthtml-hint\n[hint-1]: https://badge.fury.io/js/posthtml-hint.svg\n[hint-2]: https://badge.fury.io/js/posthtml-hint\n\n[w3c]: https://github.com/michael-ciniawsky/posthtml-w3c\n[w3c-1]: https://badge.fury.io/js/posthtml-w3c.svg\n[w3c-2]: https://badge.fury.io/js/posthtml-w3c\n\n[exp]: https://github.com/michael-ciniawsky/posthtml-exp\n[exp-1]: https://badge.fury.io/js/posthtml-exp.svg\n[exp-2]: https://badge.fury.io/js/posthtml-exp\n\n[load]: https://github.com/michael-ciniawsky/posthtml-load-plugins\n[load-1]: https://badge.fury.io/js/posthtml-load-plugins.svg\n[load-2]: https://badge.fury.io/js/posthtml-load-plugins\n\n[remove]: https://github.com/princed/posthtml-remove-attributes\n[remove-1]: https://badge.fury.io/js/posthtml-remove-attributes.svg\n[remove-2]: https://badge.fury.io/js/posthtml-remove-attributes\n",
  "readmeFilename": "README.md",
  "_id": "posthtml@0.8.7",
  "_shasum": "aba6124c6cf87b4ceea6bab5f7e50268f2c2006d",
  "_resolved": "https://registry.npmjs.org/posthtml/-/posthtml-0.8.7.tgz",
  "_from": "https://registry.npmjs.org/posthtml/-/posthtml-0.8.7.tgz"
}
